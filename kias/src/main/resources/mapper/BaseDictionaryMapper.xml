<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kias.dao.BaseDictionaryMapper">
  <resultMap id="BaseResultMap" type="com.kias.model.BaseDictionary">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="types" jdbcType="VARCHAR" property="types" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="enabled" jdbcType="VARCHAR" property="enabled" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    id, types, typeName, code, name, sort, enabled, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_dictionary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_dictionary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kias.model.BaseDictionary">
    insert into base_dictionary (id, types, typeName, 
      code, name, sort, enabled, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{types,jdbcType=VARCHAR}, #{typename,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{enabled,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kias.model.BaseDictionary">
    insert into base_dictionary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="types != null">
        #{types,jdbcType=VARCHAR},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kias.model.BaseDictionary">
    update base_dictionary
    <set>
      <if test="types != null">
        types = #{types,jdbcType=VARCHAR},
      </if>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kias.model.BaseDictionary">
    update base_dictionary
    set types = #{types,jdbcType=VARCHAR},
      typeName = #{typename,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 自定义的通用查询-->
   <select id="selectByDict" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_dictionary
    <where>
      <if test="record.id != null "> AND
        id = #{record.id,jdbcType=INTEGER}
      </if>
      <if test="record.types != null and record.types != ''"> AND
        types = #{record.types,jdbcType=VARCHAR}
      </if>
      <if test="record.typename != null and record.typename != ''"> AND
        typeName = #{record.typename,jdbcType=VARCHAR}
      </if>
      <if test="record.code != null and record.code != ''"> AND
        code = #{record.code,jdbcType=VARCHAR}
      </if>
      <if test="record.name != null and record.name != ''"> AND
        name = #{record.name,jdbcType=VARCHAR}
      </if>
      <if test="record.sort != null"> AND
        sort = #{record.sort,jdbcType=INTEGER}
      </if>
      <if test="record.enabled != null and record.enabled != ''"> AND
        enabled = #{record.enabled,jdbcType=VARCHAR}
      </if>
      <if test="record.enabled == null or record.enabled == ''"> AND
        enabled ="1"
      </if>
      <if test="record.remarks != null and record.remarks != ''"> AND
        remarks = #{record.remarks,jdbcType=VARCHAR}
      </if>
      <if test="conds != null and conds !=''">
  		AND conds
  	  </if>
    </where>
    <if test=" extra !=null and  extra !=''">
    	extra
    </if>
      	order by sort
  </select>
  <!-- 逻辑删除，enabled=0 -->
  <update id="delByIds" parameterType="java.util.Map">
    update base_dictionary SET  enabled='0' 
    <where>
      <if test="id != null"> AND
        id = #{id,jdbcType=INTEGER}
      </if>
      <if test="ids !=null">
	      	AND id in 
	      	<foreach collection="ids" item="item" index="idx" open="(" separator="," close=")">
	      		#{item}
	      	</foreach>
	  </if>
    </where>
  </update>
  <!--批量插入-->
  <insert id="addBatchDict" parameterType="java.util.List" useGeneratedKeys="true">  
    insert into base_dictionary (types, typeName, code, name, sort, enabled,remarks)
    VALUES  
    <foreach collection="list" item="item" index="index" separator=",">  
	   ( #{item.types}, #{item.typename},#{item.code}, #{item.name},#{item.sort},#{item.enabled},#{item.remarks})
	</foreach>  
  </insert>
  <!-- 批量更新 -->
   <update id="updateBatchDictList" parameterType="java.util.List">  
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">   
	      update base_dictionary
		    <set>
		      <if test="item.types != null">
		        types = #{item.types},
		      </if>
		      <if test="item.typename != null">
		        typeName = #{item.typename},
		      </if>
		      <if test="item.code != null">
		        code = #{item.code},
		      </if>
		      <if test="item.name != null">
		        name = #{item.name},
		      </if>
		      <if test="item.sort != null">
		        sort = #{item.sort},
		      </if>
		      <if test="item.enabled != null">
		        enabled = #{item.enabled},
		      </if>
		      <if test="item.remarks != null">
		        remarks = #{item.remarks},
		      </if>
		    </set>
	   	  where id = #{item.id}        
        </foreach>  
    </update>
</mapper>